# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import admin_bp_symbol_requirements_pb2 as admin_dot_admin__bp__symbol__requirements__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AdminBpSymbolRequirementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/AdminBpSymbolRequirementService/List',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementListResponse.FromString,
                )
        self.Search = channel.unary_unary(
                '/AdminBpSymbolRequirementService/Search',
                request_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementSearchRequest.SerializeToString,
                response_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
                )
        self.Override = channel.unary_unary(
                '/AdminBpSymbolRequirementService/Override',
                request_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementOverrideRequest.SerializeToString,
                response_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/AdminBpSymbolRequirementService/Delete',
                request_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementDeleteRequest.SerializeToString,
                response_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
                )


class AdminBpSymbolRequirementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Search(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Override(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AdminBpSymbolRequirementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementListResponse.SerializeToString,
            ),
            'Search': grpc.unary_unary_rpc_method_handler(
                    servicer.Search,
                    request_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementSearchRequest.FromString,
                    response_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.SerializeToString,
            ),
            'Override': grpc.unary_unary_rpc_method_handler(
                    servicer.Override,
                    request_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementOverrideRequest.FromString,
                    response_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementDeleteRequest.FromString,
                    response_serializer=admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AdminBpSymbolRequirementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AdminBpSymbolRequirementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AdminBpSymbolRequirementService/List',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Search(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AdminBpSymbolRequirementService/Search',
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementSearchRequest.SerializeToString,
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Override(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AdminBpSymbolRequirementService/Override',
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementOverrideRequest.SerializeToString,
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AdminBpSymbolRequirementService/Delete',
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementDeleteRequest.SerializeToString,
            admin_dot_admin__bp__symbol__requirements__pb2.BpSymbolRequirementResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
