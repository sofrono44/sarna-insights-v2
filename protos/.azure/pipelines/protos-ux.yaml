resources:
  repositories:
  - repository: self
  - repository: UX
    type: github
    endpoint: Sarna-Technologies
    name: Sarna-Technologies/UX

parameters:
  - name: uxBranchName
    displayName: 'UX Branch Name'
    type: string
    default: ' ' # interpreted as empty

variables:
  - name: 'dotnetSdkVersion'
    value: '8.0.x'

pool:
  vmImage: 'ubuntu-24.04'

name: $(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)

stages:
- stage: 'generate_protos'
  displayName: 'Generate Protos'
  jobs:
  - job: 'build'
    displayName: 'Build'
    timeoutInMinutes: 20
    cancelTimeoutInMinutes: 2
    steps:
    - checkout: self
    - script: |
        cd protos
        uxBranchName="${{ parameters.uxBranchName }}"
        if [[ -z "${uxBranchName}" || "${uxBranchName}" == " " ]]; then
          echo "Getting UX Branch name from the last commit message"
          uxBranchName=`git log -1 --pretty=%B | grep -o '\[ux:.*\]' | sed -E "s/\[ux:([^]]*)\]/\1/"`
        fi
        echo "##vso[task.setvariable variable=uxBranchName;isOutput=true]${uxBranchName}"
        if [[ -z "${uxBranchName}" ]]; then
          echo "The last commit message does not contain UX branch code: [ux:feature/branch_name]"
          echo "##vso[task.setvariable variable=continueExecution]false"
        else
          echo "Destination UX branch: ${uxBranchName}"
          echo "##vso[task.setvariable variable=continueExecution]true"
        fi
      name: uxBranchStep
      displayName: "Get Branch Name"
    - task: FlutterInstall@0
      inputs:
        channel: 'stable'
        version: 'custom'
        customVersion: '3.10.1'
      condition: and(succeeded(), eq(variables.continueExecution, 'true'))
    - checkout: UX
      persistCredentials: true
      condition: and(succeeded(), eq(variables.continueExecution, 'true'))
    - script: |
        export BRANCH_NAME="$(uxBranchStep.uxBranchName)"
        export DTS_USER_EMAIL="$(Build.RequestedForEmail)"
        [ -z "${DTS_USER_EMAIL}" ] && export DTS_USER_EMAIL="${BUILD_REQUESTEDFOREMAIL}"
        export DTS_USER_NAME="${BUILD_REQUESTEDFOR}"
        export PATH="$PATH":"$HOME/.pub-cache/bin":"$(DartToolPath)":"$(FlutterToolPath)"
        $(Build.SourcesDirectory)/protos/scripts/pipeline.sh $(Build.SourcesDirectory)
      displayName: "Generate Flutter Protos"
      condition: and(succeeded(), eq(variables.continueExecution, 'true'))
#  - job: 'Package'
#    displayName: 'Package .Net Library'
#    timeoutInMinutes: 15
#    cancelTimeoutInMinutes: 2
#    dependsOn: 'build'
#    steps:
#      - task: UseDotNet@2
#        displayName: 'Use .NET SDK $(dotnetSdkVersion)'
#        inputs:
#          version: '$(dotnetSdkVersion)'
#      - task: NuGetAuthenticate@1
#        displayName: Nuget Authenticate
#      - task: DotNetCoreCLI@2
#        displayName: 'Build'
#        inputs:
#          command: 'build'
#          project: '$(Build.SourcesDirectory)/DTS.Libs.Protos.csproj'
#          arguments: '-c Release'
#          modifyOutputPath: false
#          feedsToUse: 'select'
#          vstsFeed: 'sarnafinance'
#          # Azure artifact feed is not pass thru when using dotnet restore, it requires packages to be installed
#          includeNuGetOrg: true
#      - task: NuGetCommand@2
#        displayName: 'Package'
#        inputs:
#          command: 'pack'
#          configuration: 'Release'
#          versioningScheme: 'byBuildNumber'
#          includeSymbols: true
#          packagesToPack: '$(Build.SourcesDirectory)/DTS.Libs.Protos.csproj'
#      - task: NuGetCommand@2
#        displayName: 'Push'
#        inputs:
#          command: 'push'
#          nuGetFeedType: 'internal'
#          publishVstsFeed: 'sarnafinance'
